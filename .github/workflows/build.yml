name: Build

on:
  push:
    branches: master
    tags:
  pull_request:
    branches: master
  workflow_call:

env:
  BUILD_TYPE: Release  # Release, Debug, RelWithDebInfo, etc
  CEPGEN_PATH: /Package
  CG_CI: True
  MG5_aMC_VERSION: 3.6.0

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: 'laufor/ci-images:cepgen-fedora40'
      options: -v ${{ github.workspace }}:/Package
    steps:
    - uses: actions/checkout@v5
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: 'MadGraph fetch'
      uses: wei/wget@v1
      with:
        args: -O mg.tar.gz https://github.com/mg5amcnlo/mg5amcnlo/archive/refs/tags/v${{ env.MG5_aMC_VERSION }}.tar.gz
    - name: 'MadGraph install'
      run: |
        tar xvfz mg.tar.gz
        rm -f mg.tar.gz

    - name: 'CMake configuration'
      run: |
        git config --global --add safe.directory /Package
        cmake -GNinja -B ${{ env.CEPGEN_PATH }} \
              -DCMAKE_INSTALL_PREFIX=/Package/install \
              -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
              -DCMAKE_BUILD_TESTS=ON \
              -DCMAKE_BUILD_UTILS=ON \
              -DMADGRAPH_BIN=/Package/mg5amcnlo-${{ env.MG5_aMC_VERSION }}/bin/mg5_aMC

    - name: 'Build environment'
      run: |
        cmake --build ${{ env.CEPGEN_PATH }}
        cmake --build ${{ env.CEPGEN_PATH }} -- package
        cmake --build ${{ env.CEPGEN_PATH }} -- install
    - name: 'Compress environment'
      run: |
        touch environment.tar.gz
        tar cvfz environment.tar.gz --exclude={*.tar.gz,*.root,*.o,*.pyc,*.swp,*/CMakeFiles,*/cmake_install.cmake,*/nanobench-*,*.rpm,*/__pycache__,*/_CPack_*,*/.qtc*} /Package

    - name: 'Upload environment artifact'
      uses: actions/upload-artifact@v4
      with:
        name: build-env
        path: environment.tar.gz

    - name: 'Upload packages artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: package-env
        path: /Package/cepgen-*.rpm

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: 'laufor/ci-images:cepgen-fedora40'
      options: -v ${{ github.workspace }}:/Package
    steps:
    - uses: actions/checkout@v5
    - name: 'Download artifacts'
      uses: actions/download-artifact@v5
      with:
        name: build-env
    - name: 'Uncompress environment'
      run: tar xvfz environment.tar.gz -C /
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: 'Test CepGen'
      working-directory: ${{ env.CEPGEN_PATH }}
      run: |
        echo "PYTHONPATH=${{ env.CEPGEN_PATH }}:$PYTHONPATH" >> $GITHUB_ENV
        ctest -j 2 -C ${{ env.BUILD_TYPE }} -LE "unstable" -E "benchmark_|validation_" --output-on-failure --repeat until-pass:2

  benchmark:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: 'laufor/ci-images:cepgen-fedora40'
      options: -v ${{ github.workspace }}:/Package
    steps:
    - uses: actions/checkout@v5
    - name: 'Download artifacts'
      uses: actions/download-artifact@v5
      with:
        name: build-env
    - name: 'Uncompress environment'
      run: tar xvfz environment.tar.gz -C /
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: 'Benchmark CepGen modules'
      working-directory: ${{ env.CEPGEN_PATH }}
      run: |
        echo "PYTHONPATH=${{ env.CEPGEN_PATH }}:$PYTHONPATH" >> $GITHUB_ENV
        ctest -j 2 -C ${{ env.BUILD_TYPE }} -LE "unstable" -R "benchmark_*" --output-on-failure
    - name: 'Compress environment'
      run: tar cvfz benchmark-environment.tar.gz /Package/*.html
    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-env
        path: benchmark-environment.tar.gz

  validation:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: 'laufor/ci-images:cepgen-fedora40'
      options: -v ${{ github.workspace }}:/Package
    steps:
    - uses: actions/checkout@v5
    - name: 'Download artifacts'
      uses: actions/download-artifact@v5
      with:
        name: build-env
    - name: 'Uncompress environment'
      run: tar xvfz environment.tar.gz -C /
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: 'Validate CepGen modules'
      working-directory: ${{ env.CEPGEN_PATH }}
      run: |
        echo "PYTHONPATH=${{ env.CEPGEN_PATH }}:$PYTHONPATH" >> $GITHUB_ENV
        ctest -j 2 -C ${{ env.BUILD_TYPE }} -LE "unstable" -R "validation_*" --output-on-failure
    - name: 'Compress environment'
      run: |
        tar cvfz validation-environment.tar.gz ${{ env.CEPGEN_PATH }}/validation/
    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: validation-env
        path: validation-environment.tar.gz

  skimming:
    needs:
      - test
      - validation
      - benchmark
    runs-on: ubuntu-latest
    container:
      image: 'laufor/ci-images:cepgen-fedora40'
      options: -v ${{ github.workspace }}:/Package
    steps:
    - uses: actions/checkout@v5
    - name: 'Download artifacts'
      uses: actions/download-artifact@v5
      with:
        name: build-env
    - name: 'Uncompress environment'
      run: tar xvfz environment.tar.gz -C /
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: 'Compress environment'
      run: |
        tar cvfz install-environment.tar.gz /Package/src /Package/addons /Package/install
    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: install-env
        path: install-environment.tar.gz
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: build-env
