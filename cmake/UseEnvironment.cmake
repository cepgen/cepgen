if($ENV{HOSTNAME} MATCHES "^lxplus[0-9]+.cern.ch")
  set(BASE_DIR "/afs/cern.ch/sw/lcg/external")
  list(APPEND CMAKE_PREFIX_PATH "${BASE_DIR}/CMake/2.8.9/Linux-i386/share/cmake-2.8/Modules")
  set(GSL_DIR "${BASE_DIR}/GSL/2.2.1/x86_64-slc6-gcc48-opt")
  set(HEPMC_DIR "${BASE_DIR}/HepMC/2.06.08/x86_64-slc6-gcc48-opt")
  #set(LHAPDF_DIR "${BASE_DIR}/MCGenerators/lhapdf/5.8.9/x86_64-slc6-gcc46-opt")
  set(LHAPDF_DIR "${BASE_DIR}/MCGenerators_lcgcmt67c/lhapdf/6.2.0/x86_64-slc6-gcc48-opt")
  set(PYTHIA_DIR "${BASE_DIR}/MCGenerators_lcgcmt67c/pythia8/230/x86_64-slc6-gcc48-opt/")
  set(PYTHON_DIR "${BASE_DIR}/Python/2.7.4/x86_64-slc6-gcc48-opt")
  set(PYTHON_LIBRARY "${PYTHON_DIR}/lib/libpython2.7.so")
  set(PYTHON_EXECUTABLE "${PYTHON_DIR}/bin/python")
  set(PYTHON_INCLUDE_DIR "${PYTHON_DIR}/include/python2.7")
  set(ROOTSYS "${BASE_DIR}/../app/releases/ROOT/6.06.08/x86_64-slc6-gcc49-opt/root")

  message(STATUS "Compiling on LXPLUS. Do not forget to source the environment variables!")
  message(STATUS "e.g. `source /afs/cern.ch/sw/lcg/external/gcc/6.3.0/x86_64-slc6-gcc63-opt/setup.sh`")
  #--- searching for GSL
  find_library(GSL_LIB gsl HINTS ${GSL_DIR} PATH_SUFFIXES lib)
  find_library(GSL_CBLAS_LIB gslcblas HINTS ${GSL_DIR} PATH_SUFFIXES lib)
  #--- searching for Pythia 8
  find_library(PYTHIA8 pythia8 HINTS ${PYTHIA_DIR} PATH_SUFFIXES lib)
  find_path(PYTHIA8_INCLUDE Pythia8 HINTS ${PYTHIA_DIR} PATH_SUFFIXES include)
  #--- searching for LHAPDF
  find_library(LHAPDF LHAPDF HINTS ${LHAPDF_DIR} PATH_SUFFIXES lib)
  find_path(LHAPDF_INCLUDE LHAPDF HINTS ${LHAPDF_DIR} PATH_SUFFIXES include)
  #--- searching for HepMC
  find_library(HEPMC_LIB HepMC HINTS ${HEPMC_DIR} PATH_SUFFIXES lib)
  find_library(HEPMC_FIO_LIB HepMCfio HINTS ${HEPMC_DIR} PATH_SUFFIXES lib)
  find_path(HEPMC_INCLUDE HepMC HINTS ${HEPMC_DIR} PATH_SUFFIXES include)
else()
  find_library(GSL_LIB gsl)
  find_library(GSL_CBLAS_LIB gslcblas)
  find_library(PYTHIA8 pythia8 HINTS $ENV{PYTHIA8_DIR} ${PYTHIA8_DIR} PATH_SUFFIXES lib)
  find_path(PYTHIA8_INCLUDE Pythia8 HINTS $ENV{PYTHIA8_DIR} ${PYTHIA8_DIR} PATH_SUFFIXES include)
  find_library(LHAPDF LHAPDF)
  find_path(LHAPDF_INCLUDE LHAPDF)
  find_library(HEPMC_LIB HepMC)
  find_library(HEPMC_FIO_LIB HepMCfio)
  find_path(HEPMC_INCLUDE HepMC)
endif()
find_package(PythonLibs 2.7)
find_library(MUPARSER muparser)

if(GSL_LIB)
  message(STATUS "GSL found in ${GSL_LIB}")
  list(APPEND CEPGEN_EXTERNAL_REQS ${GSL_LIB} ${GSL_CBLAS_LIB})
else()
  message(FATAL_ERROR "GSL not found on your system!")
endif()
if(LHAPDF)
  message(STATUS "LHAPDF found in ${LHAPDF}")
  list(APPEND CEPGEN_EXTERNAL_REQS ${LHAPDF})
  add_definitions(-DLIBLHAPDF)
  include_directories(${LHAPDF_INCLUDE})
endif()
if(PYTHONLIBS_FOUND)
  list(APPEND CEPGEN_EXTERNAL_REQS ${PYTHON_LIBRARIES})
  add_definitions(-DPYTHON)
  message(STATUS "Python v${PYTHONLIBS_VERSION_STRING} found")
  if(PYTHONLIBS_VERSION_STRING MATCHES "[3-9].[.0-9]+")
    add_definitions(-DPYTHON3)
  endif()
  include_directories(${PYTHON_INCLUDE_DIRS})
endif()
if(PYTHIA8)
  message(STATUS "Pythia8 found in ${PYTHIA8}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-misleading-indentation")
  list(APPEND CEPGEN_EXTERNAL_REQS ${PYTHIA8} dl)
  add_definitions(-DPYTHIA8)
  include_directories(${PYTHIA8_INCLUDE})
endif()
if(HEPMC_LIB)
  message(STATUS "HepMC found in ${HEPMC_INCLUDE}")
  list(APPEND CEPGEN_EXTERNAL_REQS ${HEPMC_LIB})
  if(HEPMC_FIO_LIB)
    list(APPEND CEPGEN_EXTERNAL_REQS ${HEPMC_FIO_LIB})
  endif()
  add_definitions(-DLIBHEPMC)
  include_directories(${HEPMC_INCLUDE})
endif()
if(MUPARSER)
  message(STATUS "muParser found in ${MUPARSER}")
  list(APPEND CEPGEN_EXTERNAL_REQS ${MUPARSER})
  add_definitions(-DMUPARSER)
endif()

